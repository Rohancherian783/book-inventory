# This workflow will build a MuleSoft project and deploy to CloudHub 2.0

name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
    
    - name: Print effective settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(echo "$artifactName1" | sed "s/.jar/-$commitHash.jar/")
        mv "$artifactName1" "$artifactName2"
    
    - name: Upload artifact 
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: target/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:    
    
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: artifacts
    
    - name: Deploy to CloudHub 2.0
      env:
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact="$artifactName" \
         -Danypoint.platform.client_id="$CLIENT_ID" \
         -Danypoint.platform.client_secret="$CLIENT_SECRET" \
         -DskipTests
